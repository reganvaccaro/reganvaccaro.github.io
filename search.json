[
  {
    "objectID": "posts/march-madness-prediction/index.html",
    "href": "posts/march-madness-prediction/index.html",
    "title": "March Madness has its name for a reason.",
    "section": "",
    "text": "This year in my advanced sports data and analytics class, I worked to create a model to predict the outcome of the NCAA Men’s basketball tournament also known as March Madness.\nHow did it go you may ask?\nWell. It was madness.\nOut of 17 brackets in the class, I ended up dead last in the class. With 67 games being played in total, I predicted the correct outcome of only 14 games. That leaves me with a success rate of only about 20%.\nOn the bright side of things, I did predict a few things correctly. Within those few predictions were the Gonzaga and Xavier runs as well as the big win for Furman over Virginia.\nSo what metrics did I choose to predict our March Madness tournament?\nPoints per possession, Effective field goal percentage, Offensive rebound percentage, Defensive rebound percentage, and Turnover percentage.\nBased on my little knowledge of basketball, I thought that these metrics would help effectively predict a basketball game. The reasoning? Usually if a team has more points than the other team, if the team is more effective than its opponent, rebounds better, and turns the ball over less, the team will outperform and win the game.\nBelow here is the code that I used to predict the outcome of the NCAA tournament. Within this I used a lightgbm model to predict the outcomes of all of the games in each region. I used lightgbm since it was the quickest and most efficient to run given the state of my computer and the time that I needed to run my program.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 1.0.0 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(tidymodels)\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.2     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\n\nCode\nlibrary(zoo)\n\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nCode\nlibrary(bonsai)\nlibrary(hoopR)\n\n\n\n\nteamgames &lt;- load_mbb_team_box(2015:2023)\n\nteamstats &lt;- teamgames %&gt;% \n  filter(game_date &lt;as.Date(\"2023-03-14\")) %&gt;%\n  mutate(\n    possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    ppp = team_score * 100 /possessions,\n    efg = (field_goals_made  + 0.5 * three_point_field_goals_made) /field_goals_attempted,\n    orb = (offensive_rebounds / total_rebounds),\n    drb = (defensive_rebounds / total_rebounds),\n    tovp = (turnovers *100 ) / (field_goals_attempted + 0.44 * free_throws_attempted + turnovers),\n  )\n\n\nrollingteamstats &lt;- teamstats %&gt;% \n  group_by(team_short_display_name, season) %&gt;%\n  arrange(game_date) %&gt;%\n  mutate((team_score = (field_goals_made-three_point_field_goals_made) * 2) + (three_point_field_goals_made*3) + free_throws_made,\n    team_rolling_ppp = rollmean(lag(ppp, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_efg = rollmean(lag(efg, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_orb = rollmean(lag(orb, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_drb = rollmean(lag(drb, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_tovp = rollmean(lag(tovp, n=1), k=5, align = \"right\", fill=NA)) %&gt;% \n  ungroup()\n\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_team_id, \n    game_date, \n    season, \n    team_score, \n    team_rolling_ppp,\n    team_rolling_efg,\n    team_rolling_orb,\n    team_rolling_drb,\n    team_rolling_tovp\n    ) \n\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;% \n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_efg = team_rolling_efg,\n    opponent_rolling_orb = team_rolling_orb,\n    opponent_rolling_drb = team_rolling_drb,\n    opponent_rolling_tovp = team_rolling_tovp\n  ) %&gt;%\n  mutate(opponent_team_id = as.numeric(opponent_team_id)\n)\n\ngames &lt;- team_side %&gt;% inner_join(opponent_side)\n\n\nJoining, by = c(\"game_id\", \"opponent_team_id\", \"game_date\", \"season\")\n\n\nCode\ngames &lt;- games %&gt;%\n  filter(game_date &lt; \"2023-03-16\")\n\ngames &lt;- games %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n))) %&gt;% na.omit()\n\nmodelgames &lt;- games %&gt;% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp,\n    team_rolling_efg, \n    opponent_rolling_efg,\n    opponent_rolling_orb,\n    team_rolling_orb,\n    opponent_rolling_drb,\n    team_rolling_drb,\n    team_rolling_tovp,\n    opponent_rolling_tovp,\n    team_result\n    ) %&gt;% \n  na.omit()\n\n\n\n\ngame_split &lt;- initial_split(modelgames, prop = .8)\ngame_train &lt;- training(game_split)\ngame_test &lt;- testing(game_split)\n\nlightgbm_mod &lt;-\n  boost_tree() %&gt;%\n  set_engine(\"lightgbm\") %&gt;%\n  set_mode(mode = \"classification\")\n\ngame_recipe &lt;- \n  recipe(team_result ~ ., data = game_train) %&gt;% \n  update_role(game_id, game_date, team_short_display_name, opponent_short_display_name, season, new_role = \"ID\") %&gt;%\n  step_normalize(all_predictors())\n\n\nlightgbm_workflow &lt;- \n  workflow() %&gt;% \n  add_model(lightgbm_mod) %&gt;% \n  add_recipe(game_recipe)\n\nlightgbm_fit &lt;- \n  lightgbm_workflow %&gt;% \n  fit(data = game_train)\n\n\nrollingteamstats &lt;- teamstats %&gt;% \n  group_by(team_short_display_name, season) %&gt;%\n  arrange(game_date) %&gt;%\n  mutate(\n    team_score = ((field_goals_made-three_point_field_goals_made) * 2) + (three_point_field_goals_made*3) + free_throws_made,\n    team_rolling_ppp = rollmean(ppp, k=5, align=\"right\", fill=NA),\n    team_rolling_efg = rollmean(efg, k=5, align=\"right\", fill=NA),\n    team_rolling_orb = rollmean(orb, n=1, k=5, align=\"right\", fill=NA),\n    team_rolling_drb = rollmean(drb, n=1, k=5, align=\"right\", fill=NA),\n   team_rolling_tovp = rollmean(tovp,n = 1, k=5, align =\"right\", fill=NA))  %&gt;%\n  ungroup() \n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_team_id, \n    game_date, \n    season, \n    team_score, \n    team_rolling_ppp,\n    team_rolling_efg,\n    team_rolling_orb,\n    team_rolling_drb,\n    team_rolling_tovp,\n    possessions\n    ) \n\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;% \n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_efg = team_rolling_efg,\n    opponent_rolling_orb = team_rolling_orb,\n    opponent_rolling_drb = team_rolling_drb,\n    opponent_rolling_tovp = team_rolling_tovp,\n    opponent_possessions = possessions\n  ) %&gt;%\n  mutate(opponent_team_id = as.numeric(opponent_team_id)\n)\n\ngames &lt;- team_side %&gt;% inner_join(opponent_side)\n\n\nJoining, by = c(\"game_id\", \"opponent_team_id\", \"game_date\", \"season\")\n\n\nCode\nteamdefensiveefficiency &lt;- games %&gt;%\n  arrange(game_date) %&gt;%\n  group_by(team_short_display_name, season) %&gt;%\n  mutate(\n    team_rolling_def = rollmean((opponent_score/opponent_possessions)*100, k=15, align= \"right\", fill=NA)\n    ) %&gt;%\n  ungroup() %&gt;%\n  select(game_id, team_short_display_name, team_rolling_def)\n\n\nopponentdefensiveefficiency &lt;- games %&gt;%\n  arrange(game_date) %&gt;%\n  group_by(opponent_short_display_name, season) %&gt;%\n  mutate(\n    opponent_rolling_def = rollmean((team_score/possessions)*100, k=15, align= \"right\", fill=NA)\n    ) %&gt;%\n  ungroup() %&gt;%\n  select(game_id, opponent_short_display_name, opponent_rolling_def)\n\n\ngames &lt;- games %&gt;% inner_join(teamdefensiveefficiency)\n\n\nJoining, by = c(\"game_id\", \"team_short_display_name\")\n\n\nCode\ngames &lt;- games %&gt;% inner_join(opponentdefensiveefficiency)\n\n\nJoining, by = c(\"game_id\", \"opponent_short_display_name\")\n\n\nCode\ngames &lt;- games %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n))) %&gt;% na.omit()\n\nmodelgames &lt;- games %&gt;% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp,\n    team_rolling_efg, \n    opponent_rolling_efg,\n    team_rolling_orb,\n    opponent_rolling_orb,\n    team_rolling_drb,\n    opponent_rolling_drb,\n    team_rolling_tovp,\n    opponent_rolling_tovp,\n    team_rolling_def,\n    opponent_rolling_def,\n    team_result\n    ) %&gt;% \n  na.omit()\n\nsouthround1games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Texas A&M-CC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Maryland\",\n  opponent_short_display_name=\"West Virginia\"\n) %&gt;% add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_short_display_name=\"Charleston\"\n) %&gt;% add_row(\n  team_short_display_name=\"Virginia\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"NC State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Utah State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Princeton\"\n)\n\nsouthround1games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(southround1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nsouthround1games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(southround1games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nsouthround1 &lt;- lightgbm_fit %&gt;% predict(new_data = southround1games) %&gt;%\n  bind_cols(southround1games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1 &lt;- lightgbm_fit %&gt;% predict(new_data = southround1games, type=\"prob\") %&gt;%\n  bind_cols(southround1) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1\n\n\n# A tibble: 8 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.367   0.633 San Diego… Charle…    111.   0.484   0.310   0.690\n2 L             0.418   0.582 Virginia   Furman     117.   0.555   0.258   0.742\n3 W             0.529   0.471 Creighton  NC Sta…    112.   0.534   0.304   0.696\n4 W             0.510   0.490 Arizona    Prince…    107.   0.498   0.256   0.744\n5 L             0.401   0.599 Alabama    Texas …    119.   0.531   0.360   0.640\n6 L             0.271   0.729 Baylor     UCSB       118.   0.559   0.176   0.824\n7 W             0.522   0.478 Missouri   Utah S…    112.   0.563   0.243   0.757\n8 W             0.554   0.446 Maryland   West V…    106.   0.513   0.302   0.698\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nsouthround2games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"West Virginia\"\n) %&gt;% add_row(\n  team_short_display_name=\"Charleston\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"NC State\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Arizona\"\n)\n\nsouthround2games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(southround2games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nsouthround2games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(southround2games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nsouthround2 &lt;- lightgbm_fit %&gt;% predict(new_data = southround2games) %&gt;%\n  bind_cols(southround2games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround2 &lt;- lightgbm_fit %&gt;% predict(new_data = southround2games, type=\"prob\") %&gt;%\n  bind_cols(southround2) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround2\n\n\n# A tibble: 4 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 W             0.528   0.472 Missouri   Arizona    112.   0.591   0.219   0.781\n2 L             0.450   0.550 Charleston Furman     117.   0.555   0.258   0.742\n3 L             0.389   0.611 NC State   UCSB       118.   0.559   0.176   0.824\n4 W             0.528   0.472 Alabama    West V…    106.   0.513   0.302   0.698\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nsouthround3games &lt;- tibble(\n  team_short_display_name=\"West Virginia\",\n  opponent_short_display_name=\"Charleston\"\n) %&gt;% add_row(\n  team_short_display_name=\"UCSB\",\n  opponent_short_display_name=\"Missouri\"\n)\n\nsouthround3games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(southround3games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nsouthround3games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(southround3games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nsouthround3 &lt;- lightgbm_fit %&gt;% predict(new_data = southround3games) %&gt;%\n  bind_cols(southround3games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround3 &lt;- lightgbm_fit %&gt;% predict(new_data = southround3games, type=\"prob\") %&gt;%\n  bind_cols(southround3) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround3\n\n\n# A tibble: 2 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.337   0.663 West Virg… Charle…    111.   0.484   0.310   0.690\n2 W             0.579   0.421 UCSB       Missou…    115.   0.571   0.273   0.727\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nsouthround4games &lt;- tibble(\n  team_short_display_name=\"UCSB\",\n  opponent_short_display_name=\"Charleston\"\n)\n\nsouthround4games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(southround4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nsouthround4games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(southround4games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nsouthround4 &lt;- lightgbm_fit %&gt;% predict(new_data = southround4games) %&gt;%\n  bind_cols(southround4games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround4 &lt;- lightgbm_fit %&gt;% predict(new_data = southround4games, type=\"prob\") %&gt;%\n  bind_cols(southround4) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround4\n\n\n# A tibble: 1 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 W             0.556   0.444 UCSB       Charle…    111.   0.484   0.310   0.690\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\neastround1games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Fair. Dickinson\"\n) %&gt;% add_row(\n  team_short_display_name=\"Memphis\",\n  opponent_short_display_name=\"FAU\"\n) %&gt;% add_row(\n  team_short_display_name=\"Duke\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %&gt;% add_row(\n  team_short_display_name= \"Tennessee\",\n  opponent_short_display_name=\"Louisiana\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Providence\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kansas St\",\n  opponent_short_display_name=\"Montana St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Michigan St\",\n  opponent_short_display_name=\"USC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_short_display_name=\"Vermont\"\n)\n\neastround1games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(eastround1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\neastround1games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(eastround1games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\neastround1 &lt;- lightgbm_fit %&gt;% predict(new_data = eastround1games) %&gt;%\n  bind_cols(eastround1games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround1 &lt;- lightgbm_fit %&gt;% predict(new_data = eastround1games, type=\"prob\") %&gt;%\n  bind_cols(eastround1) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\neastround1\n\n\n# A tibble: 8 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.467   0.533 Memphis    FAU        115.   0.557   0.250   0.750\n2 W             0.566   0.434 Tennessee  Louisi…    109.   0.534   0.271   0.729\n3 L             0.383   0.617 Kansas St  Montan…    113.   0.516   0.263   0.737\n4 L             0.494   0.506 Duke       Oral R…    118.   0.529   0.261   0.739\n5 W             0.505   0.495 Kentucky   Provid…    112.   0.493   0.419   0.581\n6 W             0.601   0.399 Michigan … USC        107.   0.521   0.261   0.739\n7 L             0.382   0.618 Marquette  Vermont    119.   0.594   0.168   0.832\n8 W             0.667   0.333 Purdue     Fair. …     NA   NA      NA      NA    \n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\neastround2games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"FAU\"\n) %&gt;% add_row(\n  team_short_display_name=\"Oral Roberts\",\n  opponent_short_display_name=\"Tennessee\"\n) %&gt;% add_row(\n  team_short_display_name=\"Providence\",\n  opponent_short_display_name=\"Montana St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Michigan St\",\n  opponent_short_display_name=\"Vermont\"\n)\n\neastround2games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(eastround2games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\neastround2games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(eastround2games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\neastround2 &lt;- lightgbm_fit %&gt;% predict(new_data = eastround2games) %&gt;%\n  bind_cols(eastround2games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround2 &lt;- lightgbm_fit %&gt;% predict(new_data = eastround2games, type=\"prob\") %&gt;%\n  bind_cols(eastround2) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\neastround2\n\n\n# A tibble: 4 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 W             0.520   0.480 Purdue     FAU        115.   0.557   0.250   0.750\n2 L             0.480   0.520 Providence Montan…    113.   0.516   0.263   0.737\n3 L             0.477   0.523 Oral Robe… Tennes…    118.   0.570   0.287   0.713\n4 W             0.538   0.462 Michigan … Vermont    119.   0.594   0.168   0.832\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\neastround3games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %&gt;% add_row(\n  team_short_display_name=\"Providence\",\n  opponent_short_display_name=\"Vermont\"\n)\n\neastround3games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(eastround3games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\neastround3games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(eastround3games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\neastround3 &lt;- lightgbm_fit %&gt;% predict(new_data = eastround3games) %&gt;%\n  bind_cols(eastround3games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround3 &lt;- lightgbm_fit %&gt;% predict(new_data = eastround3games, type=\"prob\") %&gt;%\n  bind_cols(eastround3) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\neastround3\n\n\n# A tibble: 2 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.476   0.524 Purdue     Oral R…    118.   0.529   0.261   0.739\n2 L             0.369   0.631 Providence Vermont    119.   0.594   0.168   0.832\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\neastround4games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Vermont\"\n)\n\neastround4games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(eastround4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\neastround4games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(eastround4games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\neastround4 &lt;- lightgbm_fit %&gt;% predict(new_data = eastround4games) %&gt;%\n  bind_cols(eastround4games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround4 &lt;- lightgbm_fit %&gt;% predict(new_data = eastround4games, type=\"prob\") %&gt;%\n  bind_cols(eastround4) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\neastround4\n\n\n# A tibble: 1 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.374   0.626 Purdue     Vermont    119.   0.594   0.168   0.832\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nmidwestround1games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"N Kentucky\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa\",\n  opponent_short_display_name=\"Auburn\"\n) %&gt;% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Drake\"\n) %&gt;% add_row(\n  team_short_display_name= \"Indiana\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_short_display_name=\"Pittsburgh\"\n) %&gt;% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Kennesaw St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas A&M\",\n  opponent_short_display_name=\"Penn State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas\",\n  opponent_short_display_name=\"Colgate\"\n)\n\nmidwestround1games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(midwestround1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nmidwestround1games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(midwestround1games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nmidwestround1 &lt;- lightgbm_fit %&gt;% predict(new_data = midwestround1games) %&gt;%\n  bind_cols(midwestround1games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround1 &lt;- lightgbm_fit %&gt;% predict(new_data = midwestround1games, type=\"prob\") %&gt;%\n  bind_cols(midwestround1) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround1\n\n\n# A tibble: 8 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 W             0.659   0.341 Iowa       Auburn     106.   0.519   0.315   0.685\n2 L             0.258   0.742 Texas      Colgate    119.   0.604   0.170   0.830\n3 L             0.480   0.520 Miami      Drake      113.   0.554   0.230   0.770\n4 W             0.637   0.363 Xavier     Kennes…    108.   0.543   0.227   0.773\n5 L             0.266   0.734 Indiana    Kent S…    120.   0.559   0.310   0.690\n6 L             0.349   0.651 Houston    N Kent…    116.   0.540   0.329   0.671\n7 L             0.476   0.524 Texas A&M  Penn S…    106.   0.523   0.209   0.791\n8 W             0.531   0.469 Iowa State Pittsb…     NA   NA      NA      NA    \n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nmidwestround2games &lt;- tibble(\n  team_short_display_name=\"N Kentucky\",\n  opponent_short_display_name=\"Iowa\"\n) %&gt;% add_row(\n  team_short_display_name=\"Drake\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Pittsburgh\",\n  opponent_short_display_name=\"Xavier\"\n) %&gt;% add_row(\n  team_short_display_name=\"Penn State\",\n  opponent_short_display_name=\"Colgate\"\n)\n\nmidwestround2games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(midwestround2games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nmidwestround2games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(midwestround2games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nmidwestround2 &lt;- lightgbm_fit %&gt;% predict(new_data = midwestround2games) %&gt;%\n  bind_cols(midwestround2games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround2 &lt;- lightgbm_fit %&gt;% predict(new_data = midwestround2games, type=\"prob\") %&gt;%\n  bind_cols(midwestround2) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround2\n\n\n# A tibble: 4 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.329   0.671 Penn State Colgate    119.   0.604   0.170   0.830\n2 W             0.571   0.429 N Kentucky Iowa       116.   0.518   0.400   0.600\n3 L             0.486   0.514 Drake      Kent S…    120.   0.559   0.310   0.690\n4 L             0.348   0.652 Pittsburgh Xavier     116.   0.538   0.326   0.674\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nmidwestround3games &lt;- tibble(\n  team_short_display_name=\"N Kentucky\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Colgate\"\n)\n\nmidwestround3games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(midwestround3games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nmidwestround3games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(midwestround3games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nmidwestround3 &lt;- lightgbm_fit %&gt;% predict(new_data = midwestround3games) %&gt;%\n  bind_cols(midwestround3games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround3 &lt;- lightgbm_fit %&gt;% predict(new_data = midwestround3games, type=\"prob\") %&gt;%\n  bind_cols(midwestround3) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround3\n\n\n# A tibble: 2 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.442   0.558 Xavier     Colgate    119.   0.604   0.170   0.830\n2 L             0.478   0.522 N Kentucky Kent S…    120.   0.559   0.310   0.690\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nmidwestround4games &lt;- tibble(\n  team_short_display_name=\"Kent State\",\n  opponent_short_display_name=\"Xavier\"\n)\n\nmidwestround4games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(midwestround4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nmidwestround4games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(midwestround4games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nmidwestround4 &lt;- lightgbm_fit %&gt;% predict(new_data = midwestround4games) %&gt;%\n  bind_cols(midwestround4games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround4 &lt;- lightgbm_fit %&gt;% predict(new_data = midwestround4games, type=\"prob\") %&gt;%\n  bind_cols(midwestround4) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround4\n\n\n# A tibble: 1 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 W             0.609   0.391 Kent State Xavier     116.   0.538   0.326   0.674\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nwestround1games &lt;- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Howard\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arkansas\",\n  opponent_short_display_name=\"Illinois\"\n) %&gt;% add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_short_display_name=\"VCU\"\n) %&gt;% add_row(\n  team_short_display_name= \"UConn\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Arizona St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"Grand Canyon\"\n) %&gt;% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"Boise St\"\n) %&gt;% add_row(\n  team_short_display_name=\"UCLA\",\n  opponent_short_display_name=\"UNC Asheville\"\n)\n\nwestround1games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(westround1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nwestround1games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(westround1games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nwestround1 &lt;- lightgbm_fit %&gt;% predict(new_data = westround1games) %&gt;%\n  bind_cols(westround1games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround1 &lt;- lightgbm_fit %&gt;% predict(new_data = westround1games, type=\"prob\") %&gt;%\n  bind_cols(westround1) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nwestround1\n\n\n# A tibble: 8 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 W             0.674   0.326 TCU        Arizon…    94.0   0.429   0.374   0.626\n2 L             0.401   0.599 Northwest… Boise …   107.    0.523   0.245   0.755\n3 W             0.582   0.418 Gonzaga    Grand …   119.    0.635   0.180   0.820\n4 L             0.298   0.702 Kansas     Howard    113.    0.562   0.323   0.677\n5 L             0.433   0.567 Arkansas   Illino…   103.    0.484   0.303   0.697\n6 L             0.460   0.540 UConn      Iona      121.    0.530   0.391   0.609\n7 L             0.479   0.521 UCLA       UNC As…   111.    0.559   0.200   0.800\n8 L             0.436   0.564 Saint Mar… VCU       115.    0.574   0.232   0.768\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nwestround2games &lt;- tibble(\n  team_short_display_name=\"Howard\",\n  opponent_short_display_name=\"Illinois\"\n) %&gt;% add_row(\n  team_short_display_name=\"VCU\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Gonzaga\"\n) %&gt;% add_row(\n  team_short_display_name=\"Boise St\",\n  opponent_short_display_name=\"UNC Asheville\"\n)\n\nwestround2games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(westround2games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nwestround2games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(westround2games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nwestround2 &lt;- lightgbm_fit %&gt;% predict(new_data = westround2games) %&gt;%\n  bind_cols(westround2games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround2 &lt;- lightgbm_fit %&gt;% predict(new_data = westround2games, type=\"prob\") %&gt;%\n  bind_cols(westround2) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nwestround2\n\n\n# A tibble: 4 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.228   0.772 TCU        Gonzaga    133.   0.626   0.277   0.723\n2 W             0.563   0.437 Howard     Illino…    103.   0.484   0.303   0.697\n3 L             0.420   0.580 VCU        Iona       121.   0.530   0.391   0.609\n4 L             0.468   0.532 Boise St   UNC As…    111.   0.559   0.200   0.800\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nwestround3games &lt;- tibble(\n  team_short_display_name=\"Howard\",\n  opponent_short_display_name=\"VCU\"\n) %&gt;% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"UNC Asheville\"\n)\n\nwestround3games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(westround3games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nwestround3games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(westround3games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nwestround3 &lt;- lightgbm_fit %&gt;% predict(new_data = westround3games) %&gt;%\n  bind_cols(westround3games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround3 &lt;- lightgbm_fit %&gt;% predict(new_data = westround3games, type=\"prob\") %&gt;%\n  bind_cols(westround3) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nwestround3\n\n\n# A tibble: 2 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 W             0.752   0.248 Gonzaga    UNC As…    111.   0.559   0.200   0.800\n2 L             0.493   0.507 Howard     VCU        115.   0.574   0.232   0.768\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nwestround4games &lt;- tibble(\n  team_short_display_name=\"VCU\",\n  opponent_short_display_name=\"Gonzaga\"\n)\n\nwestround4games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(westround4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nwestround4games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(westround4games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nwestround4 &lt;- lightgbm_fit %&gt;% predict(new_data = westround4games) %&gt;%\n  bind_cols(westround4games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround4 &lt;- lightgbm_fit %&gt;% predict(new_data = westround4games, type=\"prob\") %&gt;%\n  bind_cols(westround4) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nwestround4\n\n\n# A tibble: 1 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.413   0.587 VCU        Gonzaga    133.   0.626   0.277   0.723\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nfinal4games &lt;- tibble(\n  team_short_display_name=\"UCSB\",\n  opponent_short_display_name=\"Vermont\"\n) %&gt;% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Gonzaga\"\n)\n\nfinal4games &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(final4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nfinal4games &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(final4games) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nfinal4 &lt;- lightgbm_fit %&gt;% predict(new_data = final4games) %&gt;%\n  bind_cols(final4games) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nfinal4 &lt;- lightgbm_fit %&gt;% predict(new_data = final4games, type=\"prob\") %&gt;%\n  bind_cols(final4) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nfinal4\n\n\n# A tibble: 2 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.372   0.628 Xavier     Gonzaga    133.   0.626   0.277   0.723\n2 L             0.426   0.574 UCSB       Vermont    119.   0.594   0.168   0.832\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\nfinalgames &lt;- tibble(\n  team_short_display_name=\"Vermont\",\n  opponent_short_display_name=\"Gonzaga\"\n) \n\nfinalgames &lt;- modelgames %&gt;% group_by(team_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% select(-team_result, -starts_with(\"opponent\")) %&gt;% right_join(finalgames)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nfinalgames &lt;- modelgames %&gt;% group_by(opponent_short_display_name) %&gt;% filter(game_date == max(game_date) & season == 2023) %&gt;% slice(1) %&gt;% ungroup() %&gt;% select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(finalgames) \n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nfinal &lt;- lightgbm_fit %&gt;% predict(new_data = finalgames) %&gt;%\n  bind_cols(finalgames) %&gt;% select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nfinal &lt;- lightgbm_fit %&gt;% predict(new_data = finalgames, type=\"prob\") %&gt;%\n  bind_cols(final) %&gt;% select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nfinal\n\n\n# A tibble: 1 × 20\n  .pred_class .pred_W .pred_L team_sho…¹ oppon…² oppon…³ oppon…⁴ oppon…⁵ oppon…⁶\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 L             0.444   0.556 Vermont    Gonzaga    133.   0.626   0.277   0.723\n# … with 11 more variables: opponent_rolling_tovp &lt;dbl&gt;,\n#   opponent_rolling_def &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;, season &lt;int&gt;,\n#   team_rolling_ppp &lt;dbl&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_orb &lt;dbl&gt;,\n#   team_rolling_drb &lt;dbl&gt;, team_rolling_tovp &lt;dbl&gt;, team_rolling_def &lt;dbl&gt;,\n#   and abbreviated variable names ¹​team_short_display_name,\n#   ²​opponent_short_display_name, ³​opponent_rolling_ppp, ⁴​opponent_rolling_efg,\n#   ⁵​opponent_rolling_orb, ⁶​opponent_rolling_drb\n\n\nCode\ntournamentgames &lt;- load_mbb_team_box(seasons=2023) %&gt;% filter(game_date &gt; as.Date(\"2023-03-16\")) %&gt;%\n  mutate(\n    team_score = ((field_goals_made-three_point_field_goals_made) * 2) + (three_point_field_goals_made*3) + free_throws_made,\n    possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    ppp = team_score * 100 /possessions,\n    efg = (field_goals_made  + 0.5 * three_point_field_goals_made) /field_goals_attempted,\n    orb = (offensive_rebounds / total_rebounds),\n    drb = (defensive_rebounds / total_rebounds),\n    tovp = (turnovers *100 ) / (field_goals_attempted + 0.44 * free_throws_attempted + turnovers),\n    result = (team_winner)\n  )\n\ntournamentgames %&gt;% write_csv(\"~/Desktop/tournamentgames.csv\")\n\n\nWith points per possession, my thoughts were that the team that outscored the other team with rolling points per possession would win more games and would eventually win the whole thing. The graph below shows this from my team rolling averages and the eventual team results that go along with it.\n\n\nCode\ntournamentgames %&gt;%\n  ggplot() + \n  geom_point(\n    data=games, aes(x=team_rolling_ppp, y=opponent_rolling_ppp, color=team_result)) +\n  labs(title=element_text(size=50, face=\"bold\", \"Team Performance in the Tournament\", color = \"black\"), \n       x=\"Team Rolling Points Per Possession\", y=\"Opponent Rolling Points Per Possession\", color=\"Team Result\") +\n  theme_bw() +\n  theme(axis.title.x = element_text(size = 12, face = \"bold\", color = \"black\"),\n        axis.title.y = element_text(size = 12, face = \"bold\", color = \"black\"))\n\n\n\n\n\nHere, I have taken a deeper look at my west division of my bracket. Looking at things in depth, both of the teams that I predicted to win against their opponents, the model was fairly confident. The model was also accurate.Where things got tricky in my bracket was when the win confidence hovered around the 40 to 50 % margin. Almost all of these games, my model predicted incorrectly. This is truly unfortunate because had the coin been flipped, many of those games would have been predicted correctly.\n\n\nCode\nteam &lt;- c(\"Kansas\", \"Arkansas\", \"Saint Mary's\", \"UConn\", \"TCU\", \"Gonzaga\", \"Northwestern\", \"UCLA\")\nprediction &lt;- c(\"Loss\", \"Loss\", \"Loss\", \"Loss\", \"Win\", \"Win\", \"Loss\", \"Loss\")\nwin_confidence &lt;- c(0.3, 0.4, 0.4, 0.4, 0.6, 0.7, 0.4, 0.4  )\nopponent &lt;- c(\"Howard\", \"Illinois\", \"VCU\", \"Iona\", \"Arizona St\", \"GCU\", \"Boise St\", \"UNCA\")\n\ntable &lt;- data.frame(Team = team,\n                    Prediction = prediction,\n                    Win_Confidence = win_confidence,\n                    Opponent = opponent)\ntable\n\n\n          Team Prediction Win_Confidence   Opponent\n1       Kansas       Loss            0.3     Howard\n2     Arkansas       Loss            0.4   Illinois\n3 Saint Mary's       Loss            0.4        VCU\n4        UConn       Loss            0.4       Iona\n5          TCU        Win            0.6 Arizona St\n6      Gonzaga        Win            0.7        GCU\n7 Northwestern       Loss            0.4   Boise St\n8         UCLA       Loss            0.4       UNCA\n\n\nSo why did this happen?\nGiven the fact that all of the losses were with probabilities around 50%, this could have equally been flipped. This means that further metrics to specify a win or loss prediction would be useful. The metrics that I chose very obviously did not differentiate between the teams enough for it to make a substantial prediction of wins and losses.\nIn the future, If i were to do this again I would add more specific team metrics that include player stats and team schedule strength. With the metrics I used, it never took into account that the teams who play are all very different caliber. Although Iona may have beat some very small schools with big points and good metrics but when faced against teams like UConn it does not match up comparably.\nWith all of that being said, If I were to redo this, I would have made some very large changes. Although March Madness is unpredictable, I feel as though my predictions could have been somewhat more reliable and accurate. As you can see, this March Madness bracket was not very accurate."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Latest Posts",
    "section": "",
    "text": "March Madness has its name for a reason.\n\n\n\n\n\n\n\nmarchmadness\n\n\nncaaprediction\n\n\nbasketball\n\n\n\n\n\n\n\n\n\n\n\nApr 24, 2023\n\n\nRegan Vaccaro\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]